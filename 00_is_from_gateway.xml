<include>
	<extension name="sip_peer_header_is_set" continue="true">
		<!-- direction is inbound ??? -->
		<condition field="${direction}" expression="^inbound$">
			<!-- check that the sip_gateway variable is NOT set -->
			<condition field="${sip_gateway}" expression="^$">
				<!-- make sure that this is the first time through the xml dialplan -->
				<condition field="${transfer_source}" expression="^$">
					<!-- check that the P-Peer-Name header is present -->
					<condition field="${sip_h_P-Peer-Name}" expression="(?!^$)">
						<!-- look for a sip gateway with name matching the P-Peer-Name header -->
						<condition field="${regex(${sofia xmlstatus gateway ${sip_h_P-Peer-Name}}|&lt;name&gt;${sip_h_P-Peer-Name}&lt;/name&gt;)}" expression="^true$" break="on-true">
							<action application="log" data="INFO ${sip_h_P-Peer-Name} is a defined sip gateway." inline="true"/>
							<!-- set the sip_gateway variable equal to the value from the P-Peer-Name header -->
							<action application="set" data="sip_gateway=${sip_h_P-Peer-Name}" inline="true"/>
							<!-- set the park_reason variable with the value set on the gateway -->
							<action application="set" data="park_reason=${sofia_gateway_data ${sip_gateway} ivar park_reason}" inline="true"/>
						</condition>
						<!-- look for a sip gateway with username matching the P-Peer-Name header -->
						<condition field="${regex(${replace ${sofia xmlstatus gateway}|\n|''}|&lt;gateway&gt;\s+&lt;name&gt;(((?!&lt;\/name&gt;).)*)&lt;/name&gt;\s+&lt;profile&gt;external&lt;\/profile&gt;\s+&lt;scheme&gt;Digest&lt;\/scheme&gt;\s+&lt;realm&gt;((?:(?!&lt;\/realm&gt;).)*)&lt;\/realm&gt;\s+&lt;username&gt;${sip_h_P-Peer-Name}&lt;/username&gt;.*?&lt;\/gateway&gt;|$1)}" expression="^(.+)$" break="on-true">
							<action application="log" data="INFO $1 is a defined sip gateway." inline="true"/>
							<!-- set the sip_gateway variable to the gateway name found above -->
							<action application="set" data="sip_gateway=$1" inline="true"/>
							<!-- set the park_reason variable to the value set on the gateway -->
							<action application="set" data="park_reason=${sofia_gateway_data ${sip_gateway} ivar park_reason}" inline="true"/>
						</condition>
					</condition>
				</condition>
			</condition>
		</condition>
	</extension>
	<extension name="is_from_gateway_and_sip_to_user_does_not_match_destination_number">
		<!-- direction is inbound ??? -->
		<condition field="${direction}" expression="^inbound$">
			<!-- check that the sip_gateway variable is NOT empty -->
			<condition field="${sip_gateway}" expression="(?!^$)">
				<!-- make sure that this is the first time through the xml dialplan -->
				<condition field="${transfer_source}" expression="^$">
					<!-- does the sip to user prefixed with "gw+sip" ??? -->
					<condition field="${sip_to_user}" expression="^gw\+sip(\d+)_(\w+)$" break="on-true">
						<!-- transfer in the dialplan to the destination number extracted from the sip_to_user -->
						<action application="transfer" data="$1 XML public"/>
					</condition>
					<!-- is the sip to user not equal to the destination number ??? -->
					<condition field="destination_number" expression="^(?!${sip_to_user}$).*$" break="on-true">
						<!-- transfer in the dialplan to the sip_to_user value -->
						<action application="transfer" data="${sip_to_user} XML public"/>
					</condition>
				</condition>
			</condition>
		</condition>
	</extension>
	<extension name="gateway_has_park_reason">
		<!-- direction is inbound ??? -->
		<condition field="${direction}" expression="^inbound$">
			<!-- check that the sip_gateway variable is NOT empty -->
			<condition field="${sip_gateway}" expression="(?!^$)">
				<!-- check that the park_reason channel variable is set to a valid value ending in "_new_call" -->
				<condition field="${park_reason}" expression="^\w+_new_call$">
					<!-- park the call so that the IVR/CC application can handle it -->
					<action application="park"/>
				</condition>
			</condition>
		</condition>
	</extension>
</include>
